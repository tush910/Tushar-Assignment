Assignment 4

Observations:-
1. With the help of sudo su command we been to root folder 

2. It clone everything into the current directory. On using ls command we can see the following files


3. With the help of "cd k8s-specifications" we entered into the directory and on using "ls" we could see the different YAML files in the directory.


4. On applying "kubectl apply -f ." It is creating pods for all the YAML files are available in the directory


5. We faced little errors due to name space and nodeports, to  resolve it we changed namespace to default and nodeports after which we opened browser and entered http://3.0.147.251:32004/

It opened the webpage for voting 

And simultaneouly I opened another tab to check the result page for that I entered http://3.0.147.251:31004/

It opened the webpage for result

6. I casted my vote and the result page was observed to be working correctly. I also tried to alternate my choices and it was observed that result webpage was changing accordingly.

7. On deleting the vote and result pods new pods are created and it did not effect the working of app.

8. On deleting the db-pod the result page was not working as previously. It is observed that on restarting the result pod, result started to work but  it lost some previous data.




Assignment 1:-

The DaemonSet feature is used to ensure that  pods are scheduled and running on every single available node. When a node is removed,
the DaemonSet controller ensures that the pod associated with that node is garbage collected.
Deleting a DaemonSet will clean up all the pods that DaemonSet has created while in case of replica set whenever you delete a node or pod,
it will create a new pod simultaneouly. Also you can have pods with different conditions using daemon feature.



Assignment 2:-

1. Get the deploys using kubectl get deploy
2. go to vi "yaml file name" and make changes 
3. Then we will patch for minimum read kubectl patch deployment with command " kubectl patch deployment kubia -p '{"spec": {"minReadySeconds": "set time"}}'
2. Then deploy the updated file using using "kubectl set image deployment kubia nodejs=luksa/kubia:v2"


Assignment 3:-
1. First we need to check whether the service is running on the cluster or not for that we can also use DNS cluster. For that we can use this command
kubectl get services kube-dns --namespace=kube-system

It will provide the dns name and then we can check whether it is running or not

If it is not running then we can use command "kubectl run curl --image=radial/busyboxplus:curl -i --tty"

after that you can enter nslookup my-nginx. It will start working




